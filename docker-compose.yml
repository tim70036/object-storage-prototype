version: '3.7'

# Settings and configurations that are common for all containers
x-base-config: &base-config
  image: quay.io/minio/minio:latest
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  # expose:
  #   - "9000"
  #   - "9001"
  # ports:
  #   - 9000:9000
  #   - 9001:9001
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  # healthcheck:
  #   test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #   interval: 30s
  #   timeout: 20s
  #   retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *base-config
    hostname: minio1
    volumes:
      - type: volume
        source: data1-1
        target: /data1
      - type: volume
        source: data1-2
        target: /data2
    ports:
      - 9000:9000
      - 9001:9001

  minio2:
    <<: *base-config
    hostname: minio2
    volumes:
      - type: volume
        source: data2-1
        target: /data1
      - type: volume
        source: data2-2
        target: /data2

  minio3:
    <<: *base-config
    hostname: minio3
    volumes:
      - type: volume
        source: data3-1
        target: /data1
      - type: volume
        source: data3-2
        target: /data2

  minio4:
    <<: *base-config
    hostname: minio4
    volumes:
      - type: volume
        source: data4-1
        target: /data1
      - type: volume
        source: data4-2
        target: /data2

  envoy:
    image: envoyproxy/envoy:v1.22-latest
    volumes:
      - type: bind
        source: ./envoy.yml
        target: /etc/envoy/envoy.yml
    ports:
      - 10000:10000
      - 9901:9901

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2: